on:
  push:
    branches:
      - main
    paths-ignore:
      - '.env'
      - '.env.example'
      - '.editorconfig'

jobs:
  Test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Start containers
        run: docker compose -f "docker-compose.yml" up --build --abort-on-container-exit

      - name: Stop containers
        if: always()
        run: sleep 5 && docker-compose -f "docker-compose.yml" down

  build:
    name: Build and Push
    runs-on: ubuntu-latest
    steps:
      - name: Checkout main
        uses: actions/checkout@v3

      - name: Update SHA
        run: echo $GITHUB_SHA > $GITHUB_WORKSPACE/_meta

      - name: Build container image
        run: docker build -t registry.digitalocean.com/always-sunny/content-sync:latest -t registry.digitalocean.com/always-sunny/content-sync:$(echo $GITHUB_SHA | head -c7) .

      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

      - name: Log in to DigitalOcean Container Registry with short-lived credentials
        run: doctl registry login --expiry-seconds 600

      - name: Push image to DigitalOcean Container Registry
        run: docker push registry.digitalocean.com/always-sunny/content-sync -a

      - name: Make sure latest tag actually got pushed
        run: docker push registry.digitalocean.com/always-sunny/content-sync:latest

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs:
      - build
      - test
    steps:
      - name: Checkout main
        uses: actions/checkout@v2

      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

      - name: Save DigitalOcean kubeconfig with short-lived credentials
        run: doctl kubernetes cluster kubeconfig save --expiry-seconds 600 k8s-1-24-8-do-0-sfo3-1671928634245

      - name: Install kubectl
        uses: azure/setup-kubectl@v3
        id: install

      - name: Update Deployment and Service
        run: kubectl apply -f $GITHUB_WORKSPACE/k8s/deployment.yml

      - name: Rollout Pods and Verify
        run: |
          kubectl rollout restart deployment/content-sync -n content
          kubectl rollout status deployment/content-sync -n content
